---
import WidgetWrapper from '../ui/WidgetWrapper.astro';
import type { CallToAction, Widget } from '~/types';
import Headline from '~/components/ui/Headline.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';

interface Props extends Widget {
  title?: string;
  subtitle?: string;
  tagline?: string;
  image?: string | { src: string; alt?: string }; // Ensure compatibility
  callToAction?: CallToAction;
  actions?: string | CallToAction[];
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  image = Astro.props.image, // Ensure correct image handling
  actions = await Astro.slots.render('actions'),

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <div class="max-w-3xl mx-auto text-center p-6 rounded-md shadow-md dark:shadow-lg dark:shadow-zinc-900 dark:border dark:border-zinc-800">

    <!-- Headline First -->
    <Headline
      title={title}
      tagline={tagline}
      classes={{
        container: 'mb-0 md:mb-0',
        title: 'text-4xl md:text-4xl font-bold tracking-tighter mb-4 font-heading',
      }}
    />

    <!-- Image Second -->
    {image && (
      <div class="relative mx-auto max-w-4xl mb-4">
        {typeof image === 'string' ? (
          <Image
            src={image}
            alt={title || 'Call to Action Image'}
            class="mx-auto w-full rounded-lg bg-gray-500 shadow-lg"
            width={640}
            height={426}
            layout="intrinsic"
          />
        ) : (
          <Image
            {...image}
            class="mx-auto w-full rounded-lg bg-gray-500 shadow-lg"
            width={500}
            height={700}
            layout="intrinsic"
          />
        )}
      </div>
    )}

    <!-- Subtitle Third -->
    {subtitle && (
      <p class="text-xl text-muted dark:text-slate-400">{subtitle}</p>
    )}

    <!-- Call-to-Action Buttons -->
    {actions && (
      <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 mt-6">
        {Array.isArray(actions) ? (
          actions.map((action) => (
            <div class="flex w-full sm:w-auto">
              <Button {...(action || {})} class="w-full sm:mb-0" />
            </div>
          ))
        ) : (
          <Fragment set:html={actions} />
        )}
      </div>
    )}
  </div>
</WidgetWrapper>
