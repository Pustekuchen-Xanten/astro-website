---
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  actions = await Astro.slots.render('actions'),
  image,
  id,
} = Astro.props;
---

<section class="relative not-prose min-h-screen flex items-center justify-center" {...id ? { id } : {}}>
  <!-- Background Image -->
  {image && (
    <div
      class="absolute inset-0 -z-10 bg-cover bg-center"
      style={`background-image: url('${image.src}')`}
      role="img"
      aria-label={image.alt}
    ></div>
  )}

  <!-- Content -->
  <div class="relative w-full text-center px-6 sm:px-10 py-16 max-w-7xl">
    <!-- Title -->
    {title && (
      <div class="bg-white items-center bg-opacity-50 dark:bg-opacity-20 backdrop-blur-sm rounded-lg -mt-16 shadow-lg p-2 mb-6 mx-auto max-w-4xl">
        <h1
          class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter dark:text-gray-200"
          set:html={title}
        />
      </div>
    )}

    <!-- Subtitle -->
    {subtitle && (
      <div class="bg-white bg-opacity-50 dark:bg-opacity-20 backdrop-blur-sm rounded-lg shadow-lg p-6 mx-auto max-w-3xl">
        <p
          class="text-xl text-gray-800 dark:text-slate-300"
          set:html={subtitle}
        />
      </div>
    )}

    <!-- Actions -->
    {actions && (
      <div class="mt-4 flex flex-wrap justify-center gap-2">
        {Array.isArray(actions) ? (
          actions.map((action) => <Button {...action} class="shadow-md bg-blue-800 dark:bg-blue-900" />)
        ) : (
          <Fragment set:html={actions} />
        )}
      </div>
    )}
  </div>
</section>
